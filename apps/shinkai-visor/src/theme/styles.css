@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400 700;
    font-display: optional;
    src: url(/fonts/inter-var-latin.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,
      U+2215, U+FEFF, U+FFFD;
  }

  :host,
  body {
    .wmde-markdown-var[data-color-mode*='dark'] {
      --color-canvas-default: transparent;
      --color-border-default: theme('colors.gray.400');
      --color-fg-default: theme('colors.white');
      @apply text-[15px];
    }
  }
}
@layer base {
  :host,
  body {
    @apply bg-gray-500 text-white;
  }

  ::-webkit-scrollbar {
    @apply h-4 w-2;
  }

  ::-webkit-scrollbar:horizontal {
    @apply h-2 w-4;
  }

  ::-webkit-scrollbar-track {
    @apply rounded-full bg-transparent;
  }

  ::-webkit-scrollbar-thumb {
    @apply rounded-full border-[1px] border-white bg-gray-100/40;
  }

  ::-webkit-scrollbar-thumb:hover {
    @apply bg-gray-100;
  }
}

/* prose styling for chat editor */
.prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  @apply my-2;
}
.prose-sm
  :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  @apply mt-2 border border-gray-700 bg-transparent;
}
.tiptap p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  @apply pointer-events-none float-left h-0 text-gray-100;
}
.tiptap {
  @apply placeholder:text-gray-80 min-h-[60px] max-w-full rounded-md border border-gray-200 bg-gray-400 px-3 py-2 text-sm shadow-sm focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:cursor-not-allowed disabled:opacity-50;
}
.tiptap[contenteditable='false'] {
  @apply opacity-40;
}
.wmde-markdown pre {
  @apply grid;
}

/* start - draggable styles*/
.Draggable {
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  transition: transform 250ms ease;

  > button {
    transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0)
      scale(var(--scale, 1));
  }

  &:not(.handle) {
    > button {
      touch-action: none;
      cursor: grab;

      &:focus-visible:not(.active &) {
        box-shadow: 0 0 0 3px #4c9ffe;
      }
    }
  }

  &.handle {
    > button {
      --action-background: rgba(255, 255, 255, 0.1);

      > svg {
        margin-right: 5px;
      }

      > button {
        margin-right: -10px;
      }
    }
  }

  &.dragging {
    z-index: 1;
    transition: none;
    * {
      cursor: grabbing;
    }

    > button {
      --scale: 1.06;
      --box-shadow: -1px 0 15px 0 rgba(34, 33, 81, 0.01),
        0px 15px 15px 0 rgba(34, 33, 81, 0.25);
      border-radius: 100%;
      overflow: hidden;
      &:focus-visible {
        --box-shadow: 0 0px 10px 2px #4c9ffe;
      }
    }
  }

  &.dragOverlay,
  &.dragging {
    > button {
      animation: pop 250ms cubic-bezier(0.18, 0.67, 0.6, 1.22);
    }
  }
}

.Action {
  display: flex;
  width: 12px;
  padding: 15px;
  align-items: center;
  justify-content: center;
  flex: 0 0 auto;
  touch-action: none;
  cursor: var(--cursor, pointer);
  border-radius: 5px;
  border: none;
  outline: none;
  appearance: none;
  background-color: transparent;
  -webkit-tap-highlight-color: transparent;

  @media (hover: hover) {
    &:hover {
      background-color: var(--action-background, rgba(0, 0, 0, 0.05));

      svg {
        fill: #6f7b88;
      }
    }
  }

  svg {
    flex: 0 0 auto;
    margin: auto;
    height: 100%;
    overflow: visible;
    fill: #919eab;
  }

  &:active {
    background-color: var(--background, rgba(0, 0, 0, 0.05));

    svg {
      fill: var(--fill, #788491);
    }
  }

  &:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px rgba(255, 255, 255, 0),
      0 0px 0px 2px #4c9ffe;
  }
}

@keyframes pulse {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes pop {
  0% {
    transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0)
      scale(1);
  }
  100% {
    transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0)
      scale(var(--scale));
    box-shadow: var(--box-shadow);
  }
}
/* end - draggable styles*/
