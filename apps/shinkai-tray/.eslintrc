{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:unicorn/recommended",
    "eslint-config-prettier"
  ],
  "plugins": [
    "react",
    "react-hooks",
    "import",
    "jsx-a11y",
    "@typescript-eslint",
    "perfectionist",
    "unicorn"
  ],
  "ignorePatterns": [
    ".eslintrc.json",
    "vite.config.ts",
    "postcss.config.mjs",
    "tailwind.config.js",
    "commitlint.config.cjs",
    "playwright.config.ts",
    "vitest.setup.ts"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["warn"],
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "unicorn/no-null": "off",
    "perfectionist/sort-named-imports": [
      "error",
      {
        "type": "natural",
        "order": "asc"
      }
    ],
    "perfectionist/sort-jsx-props": [
      "error",
      {
        "type": "natural",
        "order": "asc",
        "groups": ["multiline", "unknown", "shorthand"]
      }
    ],
    "perfectionist/sort-imports": [
      "error",
      {
        "type": "natural",
        "order": "asc",
        "groups": [
          "type",
          "react",
          "nanostores",
          ["builtin", "external"],
          "internal-type",
          "internal",
          ["parent-type", "sibling-type", "index-type"],
          ["parent", "sibling", "index"],
          "side-effect",
          "style",
          "object",
          "unknown"
        ],
        "custom-groups": {
          "value": {
            "react": ["react", "react-*"],
            "nanostores": "@nanostores/**"
          },
          "type": {
            "react": "react"
          }
        },
        "newlines-between": "always"
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "kebabCase": true,
          "pascalCase": true,
          "camelCase": true
        }
      }
    ],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "replacements": {
          "db": false,
          "arg": false,
          "args": false,
          "env": false,
          "fn": false,
          "func": {
            "fn": true,
            "function": false
          },
          "prop": false,
          "props": false,
          "ref": false,
          "refs": false
        },
        "ignore": ["semVer", "SemVer"]
      }
    ]
  }
}
