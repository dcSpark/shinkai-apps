/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_shinkaimessagebuilderwrapper_free(a: number): void;
export function shinkaimessagebuilderwrapper_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function shinkaimessagebuilderwrapper_body_encryption(a: number, b: number, c: number): void;
export function shinkaimessagebuilderwrapper_no_body_encryption(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_message_raw_content(a: number, b: number, c: number, d: number): void;
export function shinkaimessagebuilderwrapper_message_schema_type(a: number, b: number, c: number): void;
export function shinkaimessagebuilderwrapper_internal_metadata(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function shinkaimessagebuilderwrapper_internal_metadata_with_inbox(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function shinkaimessagebuilderwrapper_internal_metadata_with_schema(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function shinkaimessagebuilderwrapper_empty_encrypted_internal_metadata(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_empty_non_encrypted_internal_metadata(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_external_metadata(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function shinkaimessagebuilderwrapper_external_metadata_with_other(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function shinkaimessagebuilderwrapper_external_metadata_with_schedule(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function shinkaimessagebuilderwrapper_build(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_build_to_jsvalue(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_build_to_string(a: number, b: number): void;
export function shinkaimessagebuilderwrapper_ack_message(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): void;
export function shinkaimessagebuilderwrapper_request_code_registration(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number): void;
export function shinkaimessagebuilderwrapper_use_code_registration_for_profile(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number, u: number, v: number, w: number): void;
export function shinkaimessagebuilderwrapper_use_code_registration_for_device(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number, u: number, v: number, w: number, x: number, y: number, z: number, a1: number): void;
export function shinkaimessagebuilderwrapper_initial_registration_with_no_code_for_device(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number): void;
export function shinkaimessagebuilderwrapper_get_last_messages_from_inbox(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number): void;
export function shinkaimessagebuilderwrapper_request_add_agent(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number): void;
export function shinkaimessagebuilderwrapper_get_all_availability_agent(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number): void;
export function shinkaimessagebuilderwrapper_read_up_to_time(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number): void;
export function shinkaimessagebuilderwrapper_create_custom_shinkai_message_to_node(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number, u: number): void;
export function shinkaimessagebuilderwrapper_ping_pong_message(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number): void;
export function shinkaimessagebuilderwrapper_job_creation(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number): void;
export function shinkaimessagebuilderwrapper_job_message(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number): void;
export function shinkaimessagebuilderwrapper_terminate_message(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number): void;
export function shinkaimessagebuilderwrapper_error_message(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number): void;
export function shinkaimessagebuilderwrapper_get_last_unread_messages_from_inbox(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number): void;
export function __wbg_serializedagentwrapper_free(a: number): void;
export function serializedagentwrapper_fromStrings(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number): void;
export function serializedagentwrapper_fromJsValue(a: number, b: number): void;
export function serializedagentwrapper_to_json_str(a: number, b: number): void;
export function serializedagentwrapper_from_json_str(a: number, b: number, c: number): void;
export function serializedagentwrapper_inner(a: number, b: number): void;
export function serializedagentwrapper_new(a: number, b: number): void;
export function serializedagentwrapper_to_jsvalue(a: number, b: number): void;
export function __wbg_jobscopewrapper_free(a: number): void;
export function jobscopewrapper_new(a: number, b: number, c: number): void;
export function jobscopewrapper_to_jsvalue(a: number, b: number): void;
export function jobscopewrapper_to_json_str(a: number, b: number): void;
export function __wbg_jobcreationwrapper_free(a: number): void;
export function jobcreationwrapper_new(a: number, b: number): void;
export function jobcreationwrapper_to_jsvalue(a: number, b: number): void;
export function jobcreationwrapper_to_json_str(a: number, b: number): void;
export function jobcreationwrapper_get_scope(a: number, b: number): void;
export function jobcreationwrapper_from_json_str(a: number, b: number, c: number): void;
export function jobcreationwrapper_from_jsvalue(a: number, b: number): void;
export function jobcreationwrapper_empty(a: number): void;
export function __wbg_jobmessagewrapper_free(a: number): void;
export function jobmessagewrapper_new(a: number, b: number, c: number, d: number): void;
export function jobmessagewrapper_to_jsvalue(a: number, b: number): void;
export function jobmessagewrapper_to_json_str(a: number, b: number): void;
export function jobmessagewrapper_from_json_str(a: number, b: number, c: number): void;
export function jobmessagewrapper_from_jsvalue(a: number, b: number): void;
export function jobmessagewrapper_fromStrings(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function __wbg_shinkainamewrapper_free(a: number): void;
export function shinkainamewrapper_new(a: number, b: number): void;
export function shinkainamewrapper_get_full_name(a: number): number;
export function shinkainamewrapper_get_node_name(a: number): number;
export function shinkainamewrapper_get_profile_name(a: number): number;
export function shinkainamewrapper_get_subidentity_type(a: number): number;
export function shinkainamewrapper_get_subidentity_name(a: number): number;
export function shinkainamewrapper_to_jsvalue(a: number, b: number): void;
export function shinkainamewrapper_to_json_str(a: number, b: number): void;
export function shinkainamewrapper_extract_profile(a: number, b: number): void;
export function shinkainamewrapper_extract_node(a: number): number;
export function __wbg_shinkaimessagewrapper_free(a: number): void;
export function shinkaimessagewrapper_message_body(a: number, b: number): void;
export function shinkaimessagewrapper_set_message_body(a: number, b: number, c: number): void;
export function shinkaimessagewrapper_external_metadata(a: number, b: number): void;
export function shinkaimessagewrapper_set_external_metadata(a: number, b: number, c: number): void;
export function shinkaimessagewrapper_encryption(a: number, b: number): void;
export function shinkaimessagewrapper_set_encryption(a: number, b: number, c: number): void;
export function shinkaimessagewrapper_to_jsvalue(a: number, b: number): void;
export function shinkaimessagewrapper_fromJsValue(a: number, b: number): void;
export function shinkaimessagewrapper_to_json_str(a: number, b: number): void;
export function shinkaimessagewrapper_from_json_str(a: number, b: number, c: number): void;
export function shinkaimessagewrapper_calculate_hash(a: number, b: number): void;
export function shinkaimessagewrapper_generate_time_now(a: number): void;
export function convert_encryption_sk_string_to_encryption_pk_string(a: number, b: number, c: number): void;
export function shinkaimessagewrapper_new(a: number, b: number): void;
export function __wbg_inboxnamewrapper_free(a: number): void;
export function inboxnamewrapper_new(a: number, b: number): void;
export function inboxnamewrapper_to_string(a: number, b: number): void;
export function inboxnamewrapper_get_value(a: number): number;
export function inboxnamewrapper_get_is_e2e(a: number): number;
export function inboxnamewrapper_get_identities(a: number, b: number): void;
export function inboxnamewrapper_get_unique_id(a: number): number;
export function inboxnamewrapper_to_jsvalue(a: number, b: number): void;
export function inboxnamewrapper_to_json_str(a: number, b: number): void;
export function inboxnamewrapper_get_regular_inbox_name_from_params(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void;
export function inboxnamewrapper_get_job_inbox_name_from_params(a: number, b: number, c: number): void;
export function inboxnamewrapper_get_inner(a: number): number;
export function shinkaitime_generateTimeNow(a: number): void;
export function shinkaitime_generateTimeInFutureWithSecs(a: number, b: number): void;
export function shinkaitime_generateSpecificTime(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function __wbg_shinkaitime_free(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
